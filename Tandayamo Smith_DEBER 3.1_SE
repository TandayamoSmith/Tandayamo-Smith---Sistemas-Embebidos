/*
 *                Universidad Tecnica del Norte
 *         Facultad de Ingenieria en Ciencias Aplicadas
 *                     Sistemas Embebidos
 * CAPÍTULO III: MÓDULOS DE COMUNICACIÓN I2C
 * CÓDIGO 13: Comunicación I2C configurar un Maestro y 3 esclavos
 * OBJETIVO: 
 * NOMBRE: TANDAYAMO SMITH

 *           
 */
 /////////////////////////// M A S T E R//////////////////////
 
#include<Wire.h>   // Librería i2c
char dato;         // Variable de almancenamiento de datos
int i=0;

void setup() {
  Wire.begin();           //inicia comunicacion i2c
  Serial.begin(9600);     //inicia comunicacion serial
  Serial.println("        UNIVERSIDAD TECNICA DEL NORTE"); // mensaje en para el usuario en el terminal virtual
  Serial.println("FACULTAD DE INGENIERIA EN CIENCIAS APLICADAS "); // mensaje en para el usuario en el terminal virtual
  Serial.println("      INGENIERIA EN TELECOMUNICACIONES "); // mensaje en para el usuario en el terminal virtual
  Serial.println("             SISTEMAS EMBEBIDOS"); // mensaje en para el usuario en el terminal virtual
  Serial.println(""); // mensaje en para el usuario en el terminal virtual
  Serial.println("NOMBRE:TANDAYAMO SMITH"); // mensaje en para el usuario en el terminal virtual
  Serial.println("CURSO:5to CITEL"); // mensaje en para el usuario en el terminal virtual
  Serial.println(""); // mensaje en para el usuario en el terminal virtual
  Serial.println("                 DEBER 3.1"); // mensaje en para el usuario en el terminal virtual
  Serial.println("Para activar el esclavo 1 presione 'A' "); // mensaje en para el usuario en el terminal virtual
  Serial.println("Para activar el esclavo 2 presione '2' "); // mensaje en para el usuario en el terminal virtual
  Serial.println("Para activar el esclavo 3 presione 'C' "); // mensaje en para el usuario en el terminal virtual
}

void loop() {
    if(Serial.available()>0){             //verifica el puerto de comunicacion
      /*
      i++;
      if(i=='4'){
        dato=Serial.read();               // almacena el dato en variable
        Wire.beginTransmission(4);        // empieza comunicacion i2c
        Wire.write(dato);                 // envía dato
        Wire.endTransmission();           // termina comunicacion i2c
        Wire.requestFrom(4,2);  
        delay(300);
        }
        else{
          if(i=='5'){ 
            dato=Serial.read();               // almacena el dato en variable
            Wire.beginTransmission(5);        // empieza comunicacion i2c
            Wire.write(dato);                 // envía dato
            Wire.endTransmission();           // termina comunicacion i2c
            Wire.requestFrom(4,2);
            
           delay(300);
            }
            else{
              if(i=='6'){
                dato=Serial.read();               // almacena el dato en variable
                Wire.beginTransmission(6);        // empieza comunicacion i2c
                Wire.write(dato);                 // envía dato
                Wire.endTransmission();           // termina comunicacion i2c
                Wire.requestFrom(4,2);
               
                delay(300);
                }
            }
        }
        */

        dato=Serial.read(); 

        Wire.beginTransmission(4);    //Empieza la comunicacion I2C
        Wire.write(dato); 
        Wire.endTransmission();       //Termina la comunicacion I2C
        //Wire.requestFrom(4,2);

        Wire.beginTransmission(5);    //Empieza la comunicacion I2C
        Wire.write(dato); 
        Wire.endTransmission();       //Termina la comunicacion I2C
        //Wire.requestFrom(4,2);

        Wire.beginTransmission(6);    //Empieza la comunicacion I2C
        Wire.write(dato); 
        Wire.endTransmission();       //Termina la comunicacion I2C
        //Wire.requestFrom(4,2);


        
      }
}
 
